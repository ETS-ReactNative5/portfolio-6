# include /usr/local/etc/nginx/sites-enabled/*;

server {
    listen       80;
    server_name  localhost;

    index index.html;
    root   /usr/share/nginx/html;

    # Block Spam
    if ($bad_referer) {
        return 444;
    }

    location / {
        try_files $uri$args $uri$args/ /index.html;
    }

    location /assets/ {
        # Do nothing. nginx will serve files as usual.
    }

    error_page 404 /index.html;

    # location ~ \.html$ {
    #     try_files $uri =404;
    # }

    location :3000 {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Pronto $scheme;
        proxy_pass http://app:3000;
        proxy_redirect off;
    }

    location @htmlext {
        rewrite ^(.*)$ $1.html last;
    }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one

    location ~ /\.ht {
        deny  all;
    }

    # This block will catch static file requests, such as images, css, js
    # The ?: prefix is a 'non-capturing' mark, meaning we do not require
    # the pattern to be captured into $1 which should help improve performance
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        # Some basic cache-control for static files to be sent to the browser
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

}
